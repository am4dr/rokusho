
plugins {
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'org.jetbrains.kotlin.jvm' version '1.2.31' apply false
}

ext {
    packageProjects = ['app', 'javafx', 'gui', 'core', 'app-gui'].collect { project ":$it" }
    libraries = [
            kotlin: [
                    stdlib: 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.31',
            ],
            junit: [
                    api: 'org.junit.jupiter:junit-jupiter-api:5.1.0',
                    engine: 'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            ],
            commons: [
                    cli: 'commons-cli:commons-cli:1.4',
            ],
            snakeyaml: 'org.yaml:snakeyaml:1.20',
            slf4j: [
                    api: 'org.slf4j:slf4j-api:1.7.25',
            ],
            logback: 'ch.qos.logback:logback-classic:1.2.3',
    ]
}

allprojects {
    group = 'com.github.am4dr.rokusho'
    version = '0.1.0-SNAPSHOT'
    repositories {
        jcenter()
    }
}

project(':application') {
    apply plugin: 'application'
    archivesBaseName = "rokusho-$it.name"

    mainClassName = 'com.github.am4dr.rokusho.launcher.Launcher'
    dependencies {
        runtimeOnly packageProjects
    }
    jar {
        onlyIf { false }
    }
    run {
        if (project.hasProperty('args')) {
            args = project.getProperty('args').split(/\s+/).grep()
        }
    }
}

configure(packageProjects) {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'java-library'
    archivesBaseName = "rokusho-$it.name"

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions.jvmTarget = '1.8'
    }
    dependencies {
        api libraries.kotlin.stdlib

        testImplementation libraries.junit.api
        testRuntimeOnly libraries.junit.engine

        api libraries.slf4j.api
        runtimeOnly libraries.logback
    }
    test {
        useJUnitPlatform()
    }
}
project(':app-gui') {
    dependencies {
        implementation project(':app')
        implementation project(':core')
        implementation project(':javafx')
        implementation project(':gui')
        implementation libraries.commons.cli
    }
}
project(':core') {
    dependencies {
        implementation project(':javafx')
    }
}
project(':app') {
    dependencies {
        api project(':core')
        implementation project(':javafx')
        implementation libraries.snakeyaml
    }
}
